{"version":3,"sources":["webpack:///./src/components/Form.js","webpack:///./src/pages/Contact.js","webpack:///./src/components/Footer.js","webpack:///./config.js","webpack:///./src/components/Nav.js","webpack:///./src/components/Sidebar.js"],"names":["NameForm","props","useState","name","setName","method","data-netlify-recaptcha","data-netlify","data-netlify-honeypot","className","action","onSubmit","event","data","preventDefault","fetch","headers","body","target","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","htmlFor","type","placeholder","onChange","e","value","required","rows","style","display","ContactPage","id","Form","Footer","config","socialLinks","social","icon","url","href","module","exports","siteTitle","manifestName","manifestShortName","manifestStartUrl","manifestBackgroundColor","manifestThemeColor","manifestDisplay","manifestIcon","con","pathPrefix","heading","subHeading","alt","Nav","onMenuToggle","onClick","to","aria-label","SideBar","fullMenu","headerOpen","toggleHeader"],"mappings":"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","file":"component---src-pages-contact-js-0459ef9a9d83a632c4ce.js","sourcesContent":["import { navigate } from \"gatsby\"\nimport React, { useState } from \"react\";\n\n// import '../assets/sass/Form.css'\n\n// This function encodes the captured form data in the format that Netlify's backend requires\nfunction encode(data) {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\");\n}\n\nconst NameForm = (props) => {\n    const [name, setName] = useState(\"\")\n\n    const handleChange = (e) => {\n        setName({ ...name, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = (event) => {\n        // Prevent the default onSubmit behavior\n        event.preventDefault();\n        // POST the encoded form with the content-type header that's required for a text submission\n        // Note that the header will be different for POSTing a file\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({\n                \"form-name\": event.target.getAttribute(\"contact\"),\n                ...name\n            })\n        })\n            // On success, redirect to the custom success page using Gatsby's `navigate` helper function\n            .then(() => navigate(\"/thanks/\"))\n            // On error, show the error in an alert\n            .catch(error => alert(error));\n    };\n\n    return (\n\n        <form\n            name=\"contact\"\n            method=\"post\"\n            data-netlify-recaptcha=\"true\"\n            data-netlify=\"true\"\n            data-netlify-honeypot=\"bot-field\"\n            className=\"Form\"\n            action=\"/\"\n            onSubmit={handleSubmit}\n        >\n            <label htmlFor=\"nameInput\" className=\"Form--Title\">Send Me a Message!</label>\n            <label className='Form--Label'>\n                <input\n                    className='Form--Input'\n                    type='text'\n                    placeholder='Name'\n                    name='name'\n                    onChange={handleChange}\n                    required\n                />\n            </label>\n            <label className='Form--Label'>\n                <input\n                    className='Form--Input'\n                    type='email'\n                    placeholder='Email'\n                    name='email'\n                    required\n                />\n            </label>\n\n            <label className='Form--Label'>\n                <textarea\n                    className='Form--Input Form--Textarea'\n                    placeholder='Message'\n                    name='message'\n                    rows='8'\n                    required\n                />\n            </label>\n            <input type='text' name='_gotcha' style={{ display: 'none' }} />\n            {/* {!!subject && <input type='hidden' name='subject' value={subject} />} */}\n            <input type='hidden' name='form-name' value={name} />\n            <input\n                className='Form--SubmitButton'\n                type='submit'\n                value='Send'\n            />\n        </form>\n    );\n}\n\nexport default NameForm","import React from 'react'\n\n\n\nimport Form from '../components/Form'\n\nimport Footer from '../components/Footer'\nimport SideBar from '../components/Sidebar';\n\n\nconst ContactPage = () => (\n   <section id=\"one\" className=\"wrapper style1 special\">\n  \n <SideBar />\n\n        <Form />\n<Footer />\n</section>\n   \n\n   \n)\nexport default ContactPage","import React from 'react';\nimport config from '../../config';\nexport default function Footer() {\n  return (\n    <footer id=\"footer\">\n      <ul className=\"icons\">\n        {config.socialLinks.map(social => {\n          const { style, icon, url } = social;\n          return (\n            <li key={url}>\n              <a href={url} className={`icon ${style} ${icon}`}>\n                {/* <span className=\"label\">{name}</span> */}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      <ul className=\"copyright\">\n        <li>&copy; Roni Lockwood</li>\n        <li>\n          <a href=\"https://olliesworld.rocks/\" target=\"blank\">Ollies World</a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n","module.exports = {\n  siteTitle: \"Roni's Portfolio\" , // <title>\n  manifestName: 'Roni Dev' ,\n  manifestShortName: 'Roni Dev' , // max 12 characters\n  manifestStartUrl: '/',\n  manifestBackgroundColor: '#663399',\n  manifestThemeColor: '#663399',\n  manifestDisplay: 'standalone',\n  manifestIcon: 'src/assets/img/Planet-R.png',\n  con: 'src/assets/img/Planet-R.png',\n  pathPrefix: `/gatsby-starter-spectral/`, // This path is subpath of your hosting https://domain/portfolio\n  heading: 'Roni Lockwood',\n  subHeading: 'FrontEnd Web Developer by Day and Night!',\n  // social\n  socialLinks: [\n    {\n      style: 'brands',\n      icon: 'fa-github',\n      name: 'Github',\n      url: 'https://github.com/OlliesWorld',\n      alt: 'GitHub Icon',\n    },\n    {\n      style: 'brands',\n      icon: 'fa-twitter',\n      name: 'Twitter',\n      url: 'https://twitter.com/Bluesky_Roni',\n      alt: 'Twitter Icon',\n    },\n    {\n      style: 'brands',\n      icon: 'fa-linkedin-in',\n      name: 'LinkedIn',\n      url: 'https://www.linkedin.com/in/roni-lockwood/',\n      alt: 'LinkedIn Icon',\n    },\n    {\n      style: 'solid',\n      icon: 'fa-envelope',\n      name: 'Email',\n      url: 'mailto:rtlockwoodwork@gmail.com',\n      alt: 'Email Icon',\n    },\n  ],\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default function Nav({ onMenuToggle = () => { } }) {\n  return (\n    <nav id=\"nav\">\n      <ul>\n        <li className=\"special\">\n          <a\n            href=\"#menu\"\n            onClick={e => {\n              e.preventDefault();\n              onMenuToggle();\n            }}\n            className=\"menuToggle\"\n          >\n            <span>Menu</span>\n          </a>\n          <div id=\"menu\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/Projects\">Projects</Link>\n              </li>\n              \n              <li>\n                <Link to=\"/Contact\">Contact</Link>\n              </li>\n              \n            </ul>\n            <a\n              className=\"close\"\n              onClick={e => {\n                e.preventDefault();\n                onMenuToggle();\n              }}\n              href=\"#menu\"\n              aria-label=\"close\"\n            >\n              {''}\n            </a>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React, { useState } from 'react';\nimport Nav from './Nav';\nimport { Link } from 'gatsby';\nexport default function SideBar({ fullMenu }) {\n  const [headerOpen, toggleHeader] = useState(false);\n  return (\n    <header id=\"header\" className={`${fullMenu ? '' : 'alt'}`}>\n      <h1>\n        <Link to=\"/\">Roni's Site</Link>\n      </h1>\n      <div className={`${headerOpen ? 'is-menu-visible' : ' '}`}>\n        <Nav onMenuToggle={() => toggleHeader(!headerOpen)} />\n      </div>\n    </header>\n  );\n}\n"],"sourceRoot":""}