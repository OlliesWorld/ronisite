{"version":3,"sources":["webpack:///./src/components/Form.js","webpack:///./src/pages/Contact.js","webpack:///./src/components/Nav.js"],"names":["NameForm","props","useState","name","setName","method","data-netlify-recaptcha","data-netlify","data-netlify-honeypot","className","action","onSubmit","event","data","preventDefault","fetch","headers","body","target","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","htmlFor","type","placeholder","onChange","e","value","required","rows","style","display","ContactPage","Nav","Form","onMenuToggle","id","href","onClick","to","aria-label"],"mappings":"yIAYA,IAgFeA,EAhFE,SAACC,GAAW,IAAD,EACAC,mBAAS,IAA1BC,EADiB,KACXC,EADW,KA0BxB,OAEI,0BACID,KAAK,UACLE,OAAO,OACPC,yBAAuB,OACvBC,eAAa,OACbC,wBAAsB,YACtBC,UAAU,OACVC,OAAO,IACPC,SA7Ba,SAACC,GAb1B,IAAgBC,EAeRD,EAAME,iBAGNC,MAAM,IAAK,CACPV,OAAQ,OACRW,QAAS,CAAE,eAAgB,qCAC3BC,MArBIJ,EAqBS,OAAD,QACR,YAAaD,EAAMM,OAAOC,aAAa,YACpChB,GAtBRiB,OAAOC,KAAKR,GACdS,KAAI,SAAAC,GAAG,OAAIC,mBAAmBD,GAAO,IAAMC,mBAAmBX,EAAKU,OACnEE,KAAK,QAwBDC,MAAK,kBAAMC,YAAS,eAEpBC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QAetB,2BAAOE,QAAQ,YAAYtB,UAAU,eAArC,kBACA,2BAAOA,UAAU,eACb,2BACIA,UAAU,cACVuB,KAAK,OACLC,YAAY,OACZ9B,KAAK,OACL+B,SA1CK,SAACC,GAAO,IAAD,EACxB/B,EAAQ,OAAD,UAAMD,IAAN,MAAagC,EAAEjB,OAAOf,MAAOgC,EAAEjB,OAAOkB,MAAtC,MA0CKC,UAAQ,KAGhB,2BAAO5B,UAAU,eACb,2BACIA,UAAU,cACVuB,KAAK,QACLC,YAAY,QACZ9B,KAAK,QACLkC,UAAQ,KAIhB,2BAAO5B,UAAU,eACb,8BACIA,UAAU,6BACVwB,YAAY,UACZ9B,KAAK,UACLmC,KAAK,IACLD,UAAQ,KAGhB,2BAAOL,KAAK,OAAO7B,KAAK,UAAUoC,MAAO,CAAEC,QAAS,UAEpD,2BAAOR,KAAK,SAAS7B,KAAK,YAAYiC,MAAOjC,IAC7C,2BACIM,UAAU,4BACVuB,KAAK,SACLI,MAAM,c,YCxEPK,UAPK,kBACjB,oCACA,kBAACC,EAAA,EAAD,MACK,kBAACC,EAAD,S,oCCVR,uEAGe,SAASD,EAAT,GAA4C,IAAD,IAA5BE,oBAA4B,MAAb,aAAa,EACxD,OACE,yBAAKC,GAAG,OACN,4BACE,wBAAIpC,UAAU,WACZ,uBACEqC,KAAK,QACLC,QAAS,SAAAZ,GACPA,EAAErB,iBACF8B,KAEFnC,UAAU,cAEV,uCAEF,yBAAKoC,GAAG,QACN,4BACE,4BACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGJ,uBACEvC,UAAU,QACVsC,QAAS,SAAAZ,GACPA,EAAErB,iBACF8B,KAEFE,KAAK,QACLG,aAAW,SAEV","file":"component---src-pages-contact-js-e13c46b182a19644ed75.js","sourcesContent":["import { navigate } from \"gatsby\"\nimport React, { useState } from \"react\";\n\n// import '../assets/sass/Form.css'\n\n// This function encodes the captured form data in the format that Netlify's backend requires\nfunction encode(data) {\n    return Object.keys(data)\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n        .join(\"&\");\n}\n\nconst NameForm = (props) => {\n    const [name, setName] = useState(\"\")\n\n    const handleChange = (e) => {\n        setName({ ...name, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = (event) => {\n        // Prevent the default onSubmit behavior\n        event.preventDefault();\n        // POST the encoded form with the content-type header that's required for a text submission\n        // Note that the header will be different for POSTing a file\n        fetch(\"/\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: encode({\n                \"form-name\": event.target.getAttribute(\"contact\"),\n                ...name\n            })\n        })\n            // On success, redirect to the custom success page using Gatsby's `navigate` helper function\n            .then(() => navigate(\"/thanks/\"))\n            // On error, show the error in an alert\n            .catch(error => alert(error));\n    };\n\n    return (\n\n        <form\n            name=\"contact\"\n            method=\"post\"\n            data-netlify-recaptcha=\"true\"\n            data-netlify=\"true\"\n            data-netlify-honeypot=\"bot-field\"\n            className=\"Form\"\n            action=\"/\"\n            onSubmit={handleSubmit}\n        >\n            <label htmlFor=\"nameInput\" className=\"Form--Title\">Send a Message</label>\n            <label className='Form--Label'>\n                <input\n                    className='Form--Input'\n                    type='text'\n                    placeholder='Name'\n                    name='name'\n                    onChange={handleChange}\n                    required\n                />\n            </label>\n            <label className='Form--Label'>\n                <input\n                    className='Form--Input'\n                    type='email'\n                    placeholder='Email'\n                    name='email'\n                    required\n                />\n            </label>\n\n            <label className='Form--Label'>\n                <textarea\n                    className='Form--Input Form--Textarea'\n                    placeholder='Message'\n                    name='message'\n                    rows='8'\n                    required\n                />\n            </label>\n            <input type='text' name='_gotcha' style={{ display: 'none' }} />\n            {/* {!!subject && <input type='hidden' name='subject' value={subject} />} */}\n            <input type='hidden' name='form-name' value={name} />\n            <input\n                className='Button Form--SubmitButton'\n                type='submit'\n                value='Contact'\n            />\n        </form>\n    );\n}\n\nexport default NameForm","import React from 'react'\n\n\n\nimport Form from '../components/Form'\nimport Nav from '../components/Nav'\n\nconst ContactPage = () => (\n   <>\n   <Nav />\n        <Form />\n\n   </>\n)\nexport default ContactPage","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default function Nav({ onMenuToggle = () => { } }) {\n  return (\n    <nav id=\"nav\">\n      <ul>\n        <li className=\"special\">\n          <a\n            href=\"#menu\"\n            onClick={e => {\n              e.preventDefault();\n              onMenuToggle();\n            }}\n            className=\"menuToggle\"\n          >\n            <span>Menu</span>\n          </a>\n          <div id=\"menu\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/Projects\">Projects</Link>\n              </li>\n              <li>\n                <Link to=\"/Contact\">Contact</Link>\n              </li>\n            </ul>\n            <a\n              className=\"close\"\n              onClick={e => {\n                e.preventDefault();\n                onMenuToggle();\n              }}\n              href=\"#menu\"\n              aria-label=\"close\"\n            >\n              {''}\n            </a>\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n"],"sourceRoot":""}